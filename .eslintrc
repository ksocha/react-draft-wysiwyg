{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint",
    "prettier/react"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "prettier", "react", "react-hooks", "simple-import-sort"],
  "rules": {
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx", ".tsx"]
      }
    ],
    "react/no-danger": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/destructuring-assignment": 0,
    "react/button-has-type": 0,
    "react/jsx-wrap-multilines": 0,
    "react/jsx-fragments": 2,
    "react-hooks/rules-of-hooks": 2,
    "react-hooks/exhaustive-deps": 1,
    "react/jsx-props-no-spreading": 0,
    "react/state-in-constructor": 0,
    "react/jsx-curly-brace-presence": [1, { "props": "never", "children": "ignore" }],
    "react/require-default-props": 0,
    "react/style-prop-object": [
      2,
      {
        "allow": ["FormattedNumber"]
      }
    ],
    "import/named": 0,
    "import/no-cycle": 0,
    "import/no-unresolved": 0,
    "import/prefer-default-export": 0,
    "import/extensions": 0,
    "import/no-extraneous-dependencies": 0,
    "import/order": 0,
    "sort-imports": 0,
    "simple-import-sort/imports": [
      1, // as warning for now
      {
        "groups": [
          // Side effect imports.
          ["^\\u0000"],
          // Packages. `react` related packages come first.
          ["^react", "^@?\\w"],
          // Internal packages.
          // Absolute imports and other imports such as Vue-style `@/foo`.
          // Anything that does not start with a dot.
          [
            "^(__mocks__)(/.*|$)",
            "^(api)(/.*|$)",
            "^(constants)(/.*|$)",
            "^(helpers)(/.*|$)",
            "^(hooks)(/.*|$)",
            "^(i18n)(/.*|$)",
            "^(images)(/.*|$)",
            "^(polyfills)(/.*|$)",
            "^(registrations)(/.*|$)",
            "^(routes)(/.*|$)",
            "^(store)(/.*|$)",
            "^(types)(/.*|$)",
            "^(components)(/.*|$)",
            "^(App|AuthApp|DashboardApp|EmployeeDashboardApp|LandingApp)(/.*|$)",
            "^[^.]"
          ],
          // Relative imports.
          // Anything that starts with a dot.
          ["^\\."]
        ]
      }
    ],
    // TODO: with update the ESlint this problem will be resolved.
    // there is a problem, that linter throw an error even if component is nested inside label.
    // Leaving this as a warning.
    "jsx-a11y/label-has-for": [
      1,
      {
        "required": {
          "some": ["nesting", "id"]
        }
      }
    ],
    "jsx-a11y/label-has-associated-control": 1,
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["to"]
      }
    ],
    "jsx-a11y/aria-proptypes": 0,
    "no-return-assign": ["error", "except-parens"],
    "consistent-return": 0,
    "max-len": [
      "error",
      { "code": 100, "ignorePattern": "^(import|export)\\W.*", "ignoreUrls": true }
    ],
    "no-case-declarations": 0,
    "no-async-promise-executor": 1,
    "no-unused-expressions": 0,
    "camelcase": 0,
    // too much warnings to be fixed now
    // if we decide to fix them, we would have to do it in parts
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/ban-ts-comment": 0,
    "@typescript-eslint/no-unused-expressions": 2,
    "@typescript-eslint/no-unused-vars": [
      2,
      {
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/ban-ts-ignore": 0,
    "no-shadow": 0,
    "@typescript-eslint/no-shadow": 2,
    "no-use-before-define": 0,
    "@typescript-eslint/no-use-before-define": 2
  }
}
